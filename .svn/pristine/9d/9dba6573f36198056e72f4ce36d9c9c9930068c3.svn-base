<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zju.opc.mapper.ItemMapper" >
  <resultMap id="BaseResultMap" type="zju.opc.domain.Item" >
    <id column="Item_ID" property="itemId" jdbcType="INTEGER" />
    <result column="Item_Name" property="itemName" jdbcType="VARCHAR" />
    <result column="Item_Value" property="itemValue" jdbcType="VARCHAR" />
    <result column="Insert_Time" property="insertTime" jdbcType="TIMESTAMP" />
    <result column="Module_Name" property="moduleName" jdbcType="VARCHAR" />
    <result column="Machine_ID" property="machineId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Item_ID, Item_Name, Item_Value, Insert_Time, Module_Name, Machine_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="zju.opc.domain.ItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from item
    where Item_ID = #{itemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from item
    where Item_ID = #{itemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="zju.opc.domain.ItemExample" >
    delete from item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="zju.opc.domain.Item" >
    insert into item (Item_ID, Item_Name, Item_Value, 
      Insert_Time, Module_Name, Machine_ID
      )
    values (#{itemId,jdbcType=INTEGER}, #{itemName,jdbcType=VARCHAR}, #{itemValue,jdbcType=VARCHAR}, 
      #{insertTime,jdbcType=TIMESTAMP}, #{moduleName,jdbcType=VARCHAR}, #{machineId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="zju.opc.domain.Item" >
    insert into item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="itemId != null" >
        Item_ID,
      </if>
      <if test="itemName != null" >
        Item_Name,
      </if>
      <if test="itemValue != null" >
        Item_Value,
      </if>
      <if test="insertTime != null" >
        Insert_Time,
      </if>
      <if test="moduleName != null" >
        Module_Name,
      </if>
      <if test="machineId != null" >
        Machine_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="itemId != null" >
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null" >
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemValue != null" >
        #{itemValue,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null" >
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="moduleName != null" >
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="machineId != null" >
        #{machineId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="zju.opc.domain.ItemExample" resultType="java.lang.Integer" >
    select count(*) from item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update item
    <set >
      <if test="record.itemId != null" >
        Item_ID = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.itemName != null" >
        Item_Name = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.itemValue != null" >
        Item_Value = #{record.itemValue,jdbcType=VARCHAR},
      </if>
      <if test="record.insertTime != null" >
        Insert_Time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.moduleName != null" >
        Module_Name = #{record.moduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.machineId != null" >
        Machine_ID = #{record.machineId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update item
    set Item_ID = #{record.itemId,jdbcType=INTEGER},
      Item_Name = #{record.itemName,jdbcType=VARCHAR},
      Item_Value = #{record.itemValue,jdbcType=VARCHAR},
      Insert_Time = #{record.insertTime,jdbcType=TIMESTAMP},
      Module_Name = #{record.moduleName,jdbcType=VARCHAR},
      Machine_ID = #{record.machineId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="zju.opc.domain.Item" >
    update item
    <set >
      <if test="itemName != null" >
        Item_Name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemValue != null" >
        Item_Value = #{itemValue,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null" >
        Insert_Time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="moduleName != null" >
        Module_Name = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="machineId != null" >
        Machine_ID = #{machineId,jdbcType=INTEGER},
      </if>
    </set>
    where Item_ID = #{itemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zju.opc.domain.Item" >
    update item
    set Item_Name = #{itemName,jdbcType=VARCHAR},
      Item_Value = #{itemValue,jdbcType=VARCHAR},
      Insert_Time = #{insertTime,jdbcType=TIMESTAMP},
      Module_Name = #{moduleName,jdbcType=VARCHAR},
      Machine_ID = #{machineId,jdbcType=INTEGER}
    where Item_ID = #{itemId,jdbcType=INTEGER}
  </update>
</mapper>